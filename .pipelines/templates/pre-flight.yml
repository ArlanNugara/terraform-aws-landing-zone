parameters:
  - name: workingDir
    type: string
  - name: level
    type: string
  - name: AZURE_SERVICE_CONNECTION
    type: string

steps:
  - task: AzureCLI@2
    displayName: 'Terraform : FMT'
    inputs:
      azureSubscription: $(AZURE_SERVICE_CONNECTION)
      workingDirectory: ${{ parameters.workingDir }}/deploy/${{ parameters.level }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        terraform fmt -check -recursive -diff
  
  - task: AzureCLI@2
    displayName: 'Terraform : INIT'
    inputs:
      azureSubscription: $(AZURE_SERVICE_CONNECTION)
      workingDirectory: ${{ parameters.workingDir }}/deploy/${{ parameters.level }}
      scriptType: bash
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      inlineScript: |
        export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
        export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
        export AWS_DEFAULT_REGION=$(AWS_DEFAULT_REGION)
        terraform init -var-file="${{ parameters.workingDir }}/config/${{ parameters.level }}/terraform.auto.tfvars"

  - task: AzureCLI@2
    displayName: 'Terraform : VALIDATE'
    inputs:
      azureSubscription: $(AZURE_SERVICE_CONNECTION)
      workingDirectory: ${{ parameters.workingDir }}/deploy/${{ parameters.level }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        terraform validate
  
  - task: AzureCLI@2
    displayName: 'Terraform : PLAN'
    inputs:
      azureSubscription: $(AZURE_SERVICE_CONNECTION)
      workingDirectory: ${{ parameters.workingDir }}/deploy/${{ parameters.level }}
      scriptType: bash
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      inlineScript: |
        ls -ltrh
        pwd
        export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
        export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
        export AWS_DEFAULT_REGION=$(AWS_DEFAULT_REGION)
        terraform plan -var-file="${{ parameters.workingDir }}/config/${{ parameters.level }}/terraform.auto.tfvars" -out ${{ parameters.level }}.json
        terraform show -json ${{ parameters.level }}.json